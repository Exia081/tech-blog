[build]
  # 构建命令
  command = "hugo --gc --minify"
  # 输出目录
  publish = "public"
  # 构建环境
  environment = { HUGO_VERSION = "0.148.2", NODE_VERSION = "18" }

[build.processing]
  # 跳过默认的压缩，由Hugo处理
  skip_processing = false

[build.processing.css]
  # CSS压缩
  bundle = true
  minify = true

[build.processing.js]
  # JavaScript压缩
  bundle = true
  minify = true

[build.processing.html]
  # HTML压缩
  pretty_urls = true

[build.processing.images]
  # 图片压缩
  compress = true

# 针对Hugo站点的headers配置
[[headers]]
  for = "/*"
  [headers.values]
    # 安全headers
    X-Frame-Options = "DENY"
    X-XSS-Protection = "1; mode=block"
    X-Content-Type-Options = "nosniff"
    Referrer-Policy = "strict-origin-when-cross-origin"
    # 缓存控制
    Cache-Control = "public, max-age=31536000"

[[headers]]
  for = "*.html"
  [headers.values]
    Cache-Control = "public, max-age=86400"

[[headers]]
  for = "*.css"
  [headers.values]
    Cache-Control = "public, max-age=31536000"

[[headers]]
  for = "*.js"
  [headers.values]
    Cache-Control = "public, max-age=31536000"

[[headers]]
  for = "*.jpg"
  [headers.values]
    Cache-Control = "public, max-age=31536000"

[[headers]]
  for = "*.png"
  [headers.values]
    Cache-Control = "public, max-age=31536000"

[[headers]]
  for = "*.svg"
  [headers.values]
    Cache-Control = "public, max-age=31536000"

# 重定向规则（用于多语言支持）
[[redirects]]
  from = "/"
  to = "/zh/"
  status = 302
  conditions = {Language = ["zh", "zh-CN"]}

# 404页面处理（移除通配符重定向以避免拦截正常页面）
# 注意：Netlify会自动处理404页面，不需要显式重定向规则

# 针对RSS feed的重定向
[[redirects]]
  from = "/feed"
  to = "/index.xml"
  status = 301

[[redirects]]
  from = "/rss"
  to = "/index.xml"
  status = 301

# 构建hooks配置（可选）
[context.production]
  command = "hugo --gc --minify --enableGitInfo"
  
[context.deploy-preview]
  command = "hugo --gc --minify --buildFuture -b $DEPLOY_PRIME_URL"

[context.branch-deploy]
  command = "hugo --gc --minify -b $DEPLOY_PRIME_URL"

# 环境变量配置
[context.production.environment]
  HUGO_ENV = "production"
  HUGO_ENABLEGITINFO = "true"

[context.deploy-preview.environment]
  HUGO_ENV = "staging"

[context.branch-deploy.environment]
  HUGO_ENV = "staging"